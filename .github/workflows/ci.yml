name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release
  CXX_STANDARD: 20

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        compiler: 
          - { cc: gcc-11, cxx: g++-11 }
          - { cc: clang-14, cxx: clang++-14 }
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            libyaml-cpp-dev \
            libtbb-dev \
            libzmq3-dev \
            libboost-all-dev \
            libgtest-dev \
            libgmock-dev \
            libbenchmark-dev \
            libonnxruntime-dev \
            libnuma-dev \
            libcurl4-openssl-dev \
            clang-14 \
            clang-format-14 \
            clang-tidy-14 \
            cppcheck \
            valgrind \
            libwebsocketpp-dev \
            pkg-config
          
      - name: Install prometheus-cpp
        run: |
          cd /tmp
          git clone https://github.com/jupp0r/prometheus-cpp.git
          cd prometheus-cpp
          git submodule update --init --recursive
          mkdir build && cd build
          cmake .. -DBUILD_SHARED_LIBS=ON -DENABLE_TESTING=OFF
          make -j$(nproc)
          sudo make install
          sudo ldconfig
          
      - name: Install Google Test
        run: |
          cd /usr/src/gtest
          sudo cmake .
          sudo make
          sudo cp lib/*.a /usr/lib
          
      - name: Install Google Benchmark
        run: |
          cd /tmp
          git clone https://github.com/google/benchmark.git
          cd benchmark
          cmake -E make_directory "build"
          cmake -E chdir "build" cmake -DBENCHMARK_DOWNLOAD_DEPENDENCIES=on -DCMAKE_BUILD_TYPE=Release ..
          cmake --build "build" --config Release -j$(nproc)
          sudo cmake --build "build" --config Release --target install
          sudo ldconfig
      
      - name: Configure
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
            -DCMAKE_CXX_STANDARD=$CXX_STANDARD \
            -DBUILD_TESTING=ON \
            -DBUILD_BENCHMARKS=ON \
            -DENABLE_COVERAGE=OFF
      
      - name: Build
        run: cmake --build build --config $BUILD_TYPE -j$(nproc)
      
      - name: Test
        working-directory: build
        run: ctest -C $BUILD_TYPE --output-on-failure --parallel $(nproc)

  code-quality:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format-14 clang-tidy-14 cppcheck cmake build-essential pkg-config
      
      - name: Run clang-format
        run: |
          find . -name "*.hpp" -o -name "*.cpp" | grep -v build | xargs clang-format-14 --dry-run --Werror
      
      - name: Run cppcheck
        run: |
          cppcheck --enable=all --error-exitcode=1 --inline-suppr \
            --suppress=missingIncludeSystem \
            --suppress=unmatchedSuppression \
            --suppress=unusedFunction \
            -I include/ src/ 2>&1

  sanitizers:
    strategy:
      fail-fast: false
      matrix:
        sanitizer: [address, thread, undefined]
    
    runs-on: ubuntu-22.04
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            libyaml-cpp-dev \
            libtbb-dev \
            libzmq3-dev \
            libboost-all-dev \
            libgtest-dev \
            libnuma-dev \
            libcurl4-openssl-dev \
            clang-14 \
            libwebsocketpp-dev \
            pkg-config
          
      - name: Install prometheus-cpp
        run: |
          cd /tmp
          git clone https://github.com/jupp0r/prometheus-cpp.git
          cd prometheus-cpp
          git submodule update --init --recursive
          mkdir build && cd build
          cmake .. -DBUILD_SHARED_LIBS=ON -DENABLE_TESTING=OFF
          make -j$(nproc)
          sudo make install
          sudo ldconfig
          
      - name: Install Google Test
        run: |
          cd /usr/src/gtest
          sudo cmake .
          sudo make
          sudo cp lib/*.a /usr/lib
      
      - name: Configure with sanitizer
        run: |
          mkdir -p build-${{ matrix.sanitizer }}
          cd build-${{ matrix.sanitizer }}
          cmake .. \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_CXX_COMPILER=clang++-14 \
            -DCMAKE_C_COMPILER=clang-14 \
            -DSANITIZER=${{ matrix.sanitizer }} \
            -DBUILD_TESTING=ON \
            -DBUILD_BENCHMARKS=OFF
      
      - name: Build
        run: cmake --build build-${{ matrix.sanitizer }} -j$(nproc)
      
      - name: Test with sanitizer
        working-directory: build-${{ matrix.sanitizer }}
        run: ctest --output-on-failure --parallel $(nproc)
